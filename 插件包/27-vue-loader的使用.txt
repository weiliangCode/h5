//插件的说明：
将ES6语法转为正常的js语法
    "babel-core": "^6.24.0",
    "babel-loader": "^6.4.0",
    "babel-preset-es2015": "^6.24.0",

实时更新代码
    "babel-plugin-transform-runtime": "^6.8.0",
    "babel-runtime": "^6.23.0",

识别vue文件中的样式
    "css-loader": "^0.27.2",
    "vue-style-loader": "^2.0.3",

识别vue文件中的template代码
    "vue-html-loader": "^1.0.0",


识别vue文件
    "vue-hot-reload-api": "^1.2.0",
    "vue-loader": "^8.7.0",

搭建服务器  （热加载）
    "webpack": "^2.2.1",
    "webpack-dev-server": "^2.4.1"


//搭vue的环境操作：
1.npm init
    创建工程文件(package.json)

2.安装组件
	组件内容见上

3.配置webpack.config.js文件
    module.exports = {
    	entry: './main.js',

    	output: {
    		path: __dirname,
    		filename: 'bundle.js'
    	}
    }

4.编写入口文件main.js
    引入vue.js
    	1)npm install vue@1 --save
    	package.json文件中出现dependencies字段
    	值为：{
    	    "vue": "^1.0.28"
    	  }
    	意思：程序编译前，需要先编译vue组件
	2）在入口文件main.js中引入vue
	   import Vue from 'vue'

5.编译程序
	使用loader
	vue-loader
	babel-loader
	在webpack.config.js文件中增加字段：
	说明loader的使用规则
	module: {
		loaders: [
			//vue-loader
			{test: /\.vue$/, loader: 'vue-loader'},
			//es6 babel-loader
			{test: /\.js$/, loader: 'babel-loader', exclude: /node_modules/}
		]
	}

6.babel的使用规则
    方式1：echo {presets: ["es2015"],plugins: ["transform-runtime"]}>.babelrc
    方式2：等价于在根路径下创建.babelrc文件
    文件内容：{presets: ["es2015"],plugins: ["transform-runtime"]}

7.编译
	执行webpack

8.启动服务
	执行webpack-dev-server --inline --hot


//------------------------------------------------
补充：
在package.json中配置
"scripts": {
    "my-server": "webpack-dev-server --inline --hot"
  }

在命令行执行
	npm run my-server
等价于执行webpack-dev-server --inline --hot
//------------------------------------------------



